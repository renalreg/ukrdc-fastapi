name: Test and Publish

on:
  push:
  pull_request:

jobs:
  test:
    name: Run tests

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "13"

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.8

      - name: Install Dependencies
        run: poetry install

      - name: Run Tox
        run: poetry run tox

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella-3.9
          fail_ci_if_error: false

  build-spec:
    name: Build OpenAPI spec

    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.8

      - name: Install Dependencies
        run: poetry install
      
      - name: Generate API Spec
        run: poetry run python clients/generate_spec.py

      - name: Store API specification
        uses: actions/upload-artifact@v3
        with:
          name: openapi-spec
          path: clients/openapi.json

  axios-client:
    name: Build Axios client

    runs-on: ubuntu-latest
    needs: build-spec

    defaults:
      run:
        working-directory: clients/ukrdc-axios-client

    steps:
      - name: Download OpenAPI spec
        uses: actions/download-artifact@v3
        with:
          name: openapi-spec

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          check-latest: true

      - name: Install dependencies
        run: npm install

      - name: Build Axios client
        run: npm run generate-client

      - name: Re-version prereleases
        if: (github.event_name == 'push' && contains(github.ref, 'refs/tags/')) == false
        run: npm version prerelease --preid=$(git rev-parse --short "$GITHUB_SHA")

      - name: Publish Axios client
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish:
    name: Publish container image

    runs-on: ubuntu-latest
    needs: test

    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/renalreg/ukrdc-fastapi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            GITHUB_REF=${{ github.ref }}
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: ${{github.event.inputs.deployment_env}}
